import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

data = pd.read_csv("./data/ref_allRSSIperAngle_data.csv")
print(data.shape)
data = data.drop_duplicates()
print(data.shape)
X = data.iloc[:, 4:11].values
y = data.iloc[:, 11].values

X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)

clf_gini = DecisionTreeClassifier(criterion="gini", random_state=0)
clf_gini.fit(X_train, y_train)
pred_train_gini = clf_gini.predict(X_test)
print("Accuracy train data Gini: ", accuracy_score(y_test, pred_train_gini) * 100)

clf_entropy = DecisionTreeClassifier(criterion="entropy", random_state=0)
clf_entropy.fit(X_train, y_train)
pred_train_entropy = clf_entropy.predict(X_test)
print("Accuracy train data Entropy: ", accuracy_score(y_test, pred_train_entropy) * 100)

test_data = pd.read_csv("./data/ale_allRSSIperAngle_data.csv")
test_x = test_data.iloc[:, 4:11].values
test_y = test_data.iloc[:, 11].values

pred_test_gini = clf_gini.predict(test_x)
print("Accuracy test data Gini: ", accuracy_score(test_y, pred_test_gini) * 100)
# print("Pred: ", pred_test_gini)
# print("Real: ", test_y)
pred_test_entropy = clf_entropy.predict(test_x)
print("Accuracy test data Entropy: ", accuracy_score(test_y, pred_test_entropy) * 100)
# print("Pred: ", pred_test_entropy)
# print("Real: ", test_y)
